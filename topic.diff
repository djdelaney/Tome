diff -r 333157de9d25 Source/Goodreads8/ListTopicsPage.xaml
--- a/Source/Goodreads8/ListTopicsPage.xaml	Fri Oct 12 20:48:37 2012 -0400
+++ b/Source/Goodreads8/ListTopicsPage.xaml	Fri Oct 12 21:08:00 2012 -0400
@@ -1,10 +1,11 @@
-﻿<Page
+﻿<common:LayoutAwarePage
     x:Class="Goodreads8.ListTopicsPage"
     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
     xmlns:local="using:Goodreads8"
     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
+    xmlns:common="using:Goodreads8.Common"
     mc:Ignorable="d">
 
     <Page.Resources>
@@ -24,15 +25,15 @@
 
     <Grid>
         <Grid.Background>
-            <ImageBrush ImageSource="Assets/BGAuthor.jpg"/>
+            <ImageBrush ImageSource="Assets/BGAuthor.jpg" Stretch="UniformToFill"/>
         </Grid.Background>
         <Grid.RowDefinitions>
-            <RowDefinition Height="Auto"/>
+            <RowDefinition Height="120"/>
             <RowDefinition Height="*"/>
         </Grid.RowDefinitions>
 
         <!-- Back button and page title -->
-        <Grid VerticalAlignment="Top" Height="140" Grid.Row="0">
+        <Grid>
             <Grid.ColumnDefinitions>
                 <ColumnDefinition Width="Auto"/>
                 <ColumnDefinition Width="*"/>
@@ -47,7 +48,7 @@
         </Grid>
 
 		<!-- Topics -->
-        <StackPanel Orientation="Horizontal" Margin="130,0,0,0" Grid.Row="1">
+        <StackPanel Orientation="Horizontal" Margin="130,0,0,0" Grid.Row="1" x:Name="FullView">
             <Grid Margin="0,0,0,0">
                 <Grid.RowDefinitions>
                     <RowDefinition Height="Auto"/>
@@ -56,7 +57,7 @@
 
                 <TextBlock Text="Topics" IsHitTestVisible="false" Style="{StaticResource SubSectionHeader}" Margin="0,0,0,20" Grid.Row="0"/>
                 <ListView
-                    x:Name="TopicList"
+                    x:Name="gv"
                     Width="800"
                     Grid.Row="1"
                     Padding="10"
@@ -67,6 +68,51 @@
                     />
             </Grid>
         </StackPanel>
+
+        <ListView
+            Grid.Row="1"
+            IsEnabled="True"
+            x:Name="lv"
+            Margin="10,0,0,10"            
+            ItemTemplate="{StaticResource TopicTemplate}"
+            SelectionMode="None"
+            IsItemClickEnabled="True"
+            ItemClick="TopicClick"
+            />
+
+        <!-- Visual States -->
+        <VisualStateManager.VisualStateGroups>
+            <!-- Visual states reflect the application's view state -->
+            <VisualStateGroup>
+                <VisualState x:Name="FullScreenLandscape">
+                    <Storyboard>
+                    </Storyboard>
+                </VisualState>
+                <VisualState x:Name="Filled">
+                    <Storyboard>
+                    </Storyboard>
+                </VisualState>
+                <VisualState x:Name="FullScreenPortrait">
+                    <Storyboard>
+                    </Storyboard>
+                </VisualState>
+                <VisualState x:Name="Snapped">
+                    <Storyboard>
+                        <!-- Title -->
+                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
+                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
+                        </ObjectAnimationUsingKeyFrames>
+                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
+                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
+                        </ObjectAnimationUsingKeyFrames>
+
+                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FullView" Storyboard.TargetProperty="Visibility">
+                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
+                        </ObjectAnimationUsingKeyFrames>
+                    </Storyboard>
+                </VisualState>
+            </VisualStateGroup>
+        </VisualStateManager.VisualStateGroups>
     </Grid>
     <Page.BottomAppBar>
         <AppBar VerticalAlignment="Bottom">
@@ -78,4 +124,4 @@
             </Grid>
         </AppBar>
     </Page.BottomAppBar>
-</Page>
\ No newline at end of file
+</common:LayoutAwarePage>
\ No newline at end of file
diff -r 333157de9d25 Source/Goodreads8/ListTopicsPage.xaml.cs
--- a/Source/Goodreads8/ListTopicsPage.xaml.cs	Fri Oct 12 20:48:37 2012 -0400
+++ b/Source/Goodreads8/ListTopicsPage.xaml.cs	Fri Oct 12 21:08:00 2012 -0400
@@ -8,6 +8,7 @@
 using System.Linq;
 using Windows.Foundation;
 using Windows.Foundation.Collections;
+using Windows.UI.ViewManagement;
 using Windows.UI.Xaml;
 using Windows.UI.Xaml.Controls;
 using Windows.UI.Xaml.Controls.Primitives;
@@ -23,7 +24,7 @@
     /// <summary>
     /// An empty page that can be used on its own or navigated to within a Frame.
     /// </summary>
-    public sealed partial class ListTopicsPage : Page
+    public sealed partial class ListTopicsPage : Goodreads8.Common.LayoutAwarePage
     {
         public class TopicArgs
         {
@@ -38,6 +39,33 @@
         public ListTopicsPage()
         {
             this.InitializeComponent();
+            Window.Current.SizeChanged += WindowSizeChanged;
+        }
+
+        private void WindowSizeChanged(object sender, Windows.UI.Core.WindowSizeChangedEventArgs e)
+        {
+            // Obtain view state by explicitly querying for it
+            ApplicationViewState myViewState = ApplicationView.Value;
+            if (ApplicationView.Value == ApplicationViewState.Snapped)
+            {
+                this.gv.Visibility = Windows.UI.Xaml.Visibility.Collapsed;
+                this.lv.Visibility = Windows.UI.Xaml.Visibility.Visible;
+            }
+            else
+            {
+                this.gv.Visibility = Windows.UI.Xaml.Visibility.Visible;
+                this.lv.Visibility = Windows.UI.Xaml.Visibility.Collapsed;
+            }
+        }
+
+        /// <summary>
+        /// Leaving, unregister event handlers
+        /// </summary>
+        /// <param name="e"></param>
+        protected override void OnNavigatedFrom(NavigationEventArgs e)
+        {
+            Window.Current.SizeChanged -= WindowSizeChanged;
+            base.OnNavigatedFrom(e);
         }
 
         /// <summary>
@@ -60,6 +88,16 @@
         /// property is typically used to configure the page.</param>
         protected override async void OnNavigatedTo(NavigationEventArgs e)
         {
+            base.OnNavigatedTo(e);
+            if (ApplicationView.Value == ApplicationViewState.Snapped)
+            {
+                this.gv.Visibility = Windows.UI.Xaml.Visibility.Collapsed;
+            }
+            else
+            {
+                this.lv.Visibility = Windows.UI.Xaml.Visibility.Collapsed;
+            }
+
             m_arg = e.Parameter as TopicArgs;
             if (m_arg == null)
             {
@@ -78,7 +116,8 @@
             source = new IncrementalSource<IncrementalTopics, Topic>(sourceArgs);
             source.CollectionChanged += source_CollectionChanged;
 
-            this.TopicList.ItemsSource = source;
+            this.gv.ItemsSource = source;
+            this.lv.ItemsSource = source;
         }
 
         private void TopicClick(object sender, ItemClickEventArgs e)
